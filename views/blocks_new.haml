
:css
	body, html, canvas {
		height: 100%;
		margin: 0px;
		background-color: #333;
		overflow: hidden;
	}



:coffee
	$ ->
		camera = undefined
		scene = undefined
		renderer = undefined
		mesh = undefined

		renderer_defaults = (renderer) ->
			renderer.setClearColor 0xAAAAAA, 1
			renderer.setPixelRatio window.devicePixelRatio
			renderer.setSize window.innerWidth, window.innerHeight


		init = ->
			camera = new (THREE.PerspectiveCamera)(70, window.innerWidth / window.innerHeight, 1, 1000)
			camera.position.z = 800








			scene = new (THREE.Scene)



			light = new THREE.DirectionalLight 0xffffff
			light.position.set 0, 0, 1
			scene.add light

			geometry = new (THREE.BoxGeometry)(200, 200, 200)
			# material = new THREE.MeshBasicMaterial( { color: 0x00ffff, wireframe: false, vertexColors: THREE.VertexColors, transparent: false } )

			material = new THREE.MeshPhongMaterial( { color: 0x00ffff, shading: THREE.FlatShading, vertexColors: THREE.VertexColors, shininess: 400 } )

			# material = new THREE.MeshBasicMaterial( { color: 0x000000, shading: THREE.FlatShading, wireframe: true, transparent: true } )

			mesh = new (THREE.Mesh)(geometry, material)
			scene.add mesh
			renderer = new (THREE.WebGLRenderer)
			renderer_defaults renderer
			document.body.appendChild renderer.domElement





			# etc...
			#
			window.addEventListener 'resize', onWindowResize, false

		onWindowResize = ->
			camera.aspect = window.innerWidth / window.innerHeight
			camera.updateProjectionMatrix()
			renderer.setSize window.innerWidth, window.innerHeight
			return

		animate = ->
			requestAnimationFrame animate
			mesh.rotation.x += 0.03
			mesh.rotation.y += 0.002
			mesh.rotation.z += 0.005
			renderer.render scene, camera
			return

		init()
		animate()

		# ---
		# generated by js2coffee 2.1.0
